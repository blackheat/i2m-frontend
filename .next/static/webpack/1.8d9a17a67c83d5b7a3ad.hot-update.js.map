{"version":3,"file":"static/webpack/1.8d9a17a67c83d5b7a3ad.hot-update.js","sources":["webpack:///./packages/ui/src/checkbox/Checkbox.tsx","webpack:///./packages/ui/src/checkbox/CheckboxField.tsx","webpack:///./packages/ui/src/checkbox/index.ts","webpack:///./packages/ui/src/index.ts"],"sourcesContent":["import { Checkbox as AntCheckbox } from 'antd'\nimport { CheckboxProps } from 'antd/lib/checkbox/Checkbox'\nimport styled from 'styled-components'\n\nexport const Checkbox = styled(AntCheckbox)<CheckboxProps>``\n","import * as React from 'react'\nimport { FieldRenderProps } from 'react-final-form'\nimport { Checkbox } from './Checkbox'\nimport { FormItemProps } from 'antd/lib/form'\nimport { FormControl } from '../form'\n\ninterface CheckboxFieldProps {\n  label: string\n  isFieldStyle: boolean\n}\n\nexport const CheckboxField: React.FunctionComponent<\n  FieldRenderProps<HTMLInputElement> & FormItemProps & CheckboxFieldProps\n> = ({\n  input,\n  meta: { error, touched } = {},\n  label = null,\n  labelCol,\n  wrapperCol,\n  required,\n  isFieldStyle = false,\n  ...rest\n}) => {\n  return (\n    <FormControl\n      label={isFieldStyle && label}\n      touched={touched}\n      error={error}\n      required={required}\n    >\n      <Checkbox\n        onChange={e => input.onChange(e as any)}\n        checked={!!input.value}\n        {...rest}\n      >\n        {!isFieldStyle && label}\n      </Checkbox>\n    </FormControl>\n  )\n}\n","export * from './Checkbox'\nexport * from './CheckboxField'\n","import * as Form from './form'\nimport * as styles from './styles'\nimport * as themes from './themes'\nimport * as Button from './button'\nimport * as Input from './input'\nimport * as Layout from './layout'\nimport * as Icon from './icon'\nimport * as Checkbox from './checkbox'\n\nexport { themes, styles, Button, Input, Layout, Form, Icon, Checkbox }\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAEA;AAEA;AAOA;AAWA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AADA;AAEA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBA;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}